# daemonset that creates the pod which will be adding/updating certificates
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name proxy-certs
  labels:
    app: *name
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      containers:
        - image: aks-node-ca-watcher:latest
          imagePullPolicy: IfNotPresent
          name: *name
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: certs
              mountPath: "/opt/certs"
            - name: hostmount
              mountPath: "/mnt/host"
          env:
            - name: TRUSTEDCASRCDIR
              value: "opt/certs"
            - name: TRUSTEDCADESTDIR
              value: "mnt/host"
      volumes:
        - name: certs
          secret:
            secretName: trustedcasecret
        - name: hostmount
          hostPath:
            path: /opt/certs
            type: DirectoryOrCreate
---
# User secret with a certificate
apiVersion: v1
kind: Secret
metadata:
  name: trustedcasecret
type: Opaque
stringData:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIFWjCCA0KgAwIBAgIUcB6Sfu6VKhYu9JZa3reV0wwbffowDQYJKoZIhvcNAQEL
    BQAwLDEqMCgGA1UEAwwhYWtzLW5vZGVwb29sMS0xMTMyNzM3My12bXNzMDAwMDAx
    MB4XDTIyMDMwODE5NDExOVoXDTMyMDMwNTE5NDExOVowLDEqMCgGA1UEAwwhYWtz
    LW5vZGVwb29sMS0xMTMyNzM3My12bXNzMDAwMDAxMIICIjANBgkqhkiG9w0BAQEF
    AAOCAg8AMIICCgKCAgEAqSWKZWgSUlEOxwVC+M/4xkRa5Bn1oO7RipygCLvfcptj
    /O81A/DiwEn6FKA7qJstWqePIOJ3R1q6qnhJ2T7kNjbGp5zuZH0l6K5G3PTounIl
    mjxvG0tQjux8EMoWJmUfeG2gZR7/GchYaNlU2uQuF/ths8vWAFZi3v9C2SxP3vrh
    tNdc+4AcrYyD544LlUDoIx9EFaGaoJtrdRQGoC5r4/GO4IRZlL7L0AnCWaXGDG+a
    XpOK939ojEJgMjmqds0OqSpdmcNyUmzthyS/KNdlKXB0AS1VZujcrBwoy2LsTsdm
    FYUrs+CuPI6VTun7ssXpus9vTQqY94Bmn9sUDOtT30Ulxyf5cBJn6F9j3EUARAiJ
    meqGKkzwk6kjztSMYPv4EdSpWJpzooZK8exzniYNOa6HiixRLjnh8Lp6oTBelw9y
    Ojlvqhcz94qxuH8g+amb4YxokfrWMHasfJzh9+JoALEGMDLN1JR6FPaX9SyIrisC
    qxCJGLVYLStRrSNuV1YTE+DyX/0D7MPNIb319sA9yqQbf7dcE7dLVzPy9DTvcrxj
    2PZy8JQR4H/ZVKDARX+/jrnMHOt1rBvT/Zvs9p1I2lnqBvQ0SXmT9/n6dGAxNXrK
    fiI3krR4yj2Et0LCuS4VtqgpSDBNVa8LkG6vTKSM1LuewcCjs5kKNK1WAPVjKvWUC
    AwEAAaN0MHIwLAYDVR0RBCUwI4IhYWtzLW5vZGVwb29sMS0xMTMyNzM3My12bXNz
    MDAwMDAxMBIGA1UdEwEB/wQIMAYBAf8CAQAwDwYDVR0PAQH/BAUDAwfngDAdBgNV
    HSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwDQYJKoZIhvcNAQELBQADggIBAI39
    2nc4nZcZ1a8dPjPUoWjqGLnwkcIJbF/Ug8hBqFCWXrMEH4648PvTm2Ky4xzhRw3Z
    PbG7581zxuRIlfUtgcoxWCfKR3LYzMiZzAwB0RoYy/Bt8WGX0MshAww386Vp1Yvm
    mmY6lSh0mUpJ4IZ62dMV0J0cQPYsw1h3162Lb9O0PAhYdSIu3GJLOFdL+o1pV44t
    cmdfraJVt0Ch4gFkWtDdw1FcRBzqkYJKXglSVTdQ0L/0jF7rlviT2U/9MKQDnENg
    VcnhScK02V9n1GHZKouN+b8E+6pSgJpr/sz/b6aG6Vv/q74ssH/Gxo7CB2LDXIGY
    Ao8PFs7jLkv51LKP79vBJkmCzpFxKIZlKwELx6dU5+6LQYmIm0oo+rRLkRVyjNAp
    +xA8hEfg4e/mriKjt6FJfXqBA2zfFvFbP/e4fES3HBpVWax28PurV+vUg7rCllw3
    EDqFot5hIa/sifSf4srlJTiA3D6yl81/KwUCUgS44Kgq21nsUQxyo/pUONv1a56p
    zfQaJpzsnlA3XwEdWVxyJsCa+s0mHV8fFrBa7zritpk72VOlBDe40PYBNqoeTDEY
    U6hmwhsgvCkCs7AgCKoP47OAIe17Yxu005LpAGIMnOKZSUTTIWegKSNaFFvoU09q
    nR4/4t4wv0tUJmdno661Zjxn74PDnXwVrTA40iXM
    -----END CERTIFICATE-----
---